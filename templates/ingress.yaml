apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: {{ template "fullname" . }}
    chart: {{ template "chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
    stage: {{ .Values.stage | quote }}
  annotations:
{{- if eq .Values.ingress.class "gce" }}
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "cobrowse-api-ip"
    networking.gke.io/managed-certificates: "cobrowse-api-ssl"
    networking.gke.io/v1beta1.FrontendConfig: "api-frontend-config"
{{- else if eq .Values.ingress.class "azure/application-gateway" }}
    kubernetes.io/ingress.class: "azure/application-gateway"
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    certmanager.k8s.io/cluster-issuer: "letsencrypt-production"
    cert-manager.io/acme-challenge-type: "http01"
{{- else if eq .Values.ingress.class "nginx" }}
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    certmanager.k8s.io/cluster-issuer: "letsencrypt-production"
    cert-manager.io/acme-challenge-type: "http01"
{{- end }}
  name: api-ingress
  namespace: {{ .Values.namespace | default "default" }}
spec:
  backend:
    serviceName: {{ .Release.Name }}-frontend-svc
    servicePort: 8080
{{- if or (eq .Values.ingress.class "nginx") (eq .Values.ingress.class "azure/application-gateway") }}
  tls:
  - hosts: 
    - {{ .Values.domain }}
    secretName: "tls-secret"
{{- end }}
  rules:
  - host: {{ .Values.domain }}
    http:
      paths:
      - backend:
          serviceName: {{ .Release.Name }}-api-svc
          servicePort: 8080
        path: "/api/"
        pathType: Prefix
      - backend:
          serviceName: {{ .Release.Name }}-recording-svc
          servicePort: 8080
        path: "/recording/"
        pathType: Prefix
      - backend:
          serviceName: {{ .Release.Name }}-proxy-svc
          servicePort: 8080
        path: "/proxy/"
        pathType: Prefix
      - backend:
          serviceName: {{ .Release.Name }}-sockets-svc
          servicePort: 8080
        path: "/sockets/"
        pathType: Prefix